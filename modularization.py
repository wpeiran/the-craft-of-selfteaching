'''
模块化的构建原则：

高内聚：每个模块做且只做好一件事;
低耦合：使用模块时，只看接口不看实现;
面向接口：提供定义清晰的接口说明其输入和输出;
可管理的复杂度：复杂度以开发者能高效维护为准;
组合：通过组合若干子模块以实现更复杂的模块;
复用：模块可以在不同场景广泛复用;
'''

'''
从结构化编程的角度来看，写函数的一个基本要求就是：
* 完成一个功能;
* 只完成一个功能;
* 没有任何错误地只完成一个功能。
'''

'''
结构化编程的核心就是”拆分任务“，把任务拆分到不能再拆分为止——什么时候不能再拆分了呢？就是当一个函数只完成一个功能的时候。

另一个核心就是”抽象“，通过”面向对象“的编程方法去”抽象“构建现实世界中的对象。抽象的两点重要核心是：范化、继承，和与之衍生出来的”多态“。
'''